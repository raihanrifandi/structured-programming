#include <iostream>
using namespace std;

struct Node
{
    int data;
    Node *next;
};

struct MyList
{
    Node *head;
    void tambahBelakang(int);
    void hapusDepan();
    void hapusBelakang();
    void hapus(int);
    MyList()
    {
        head = new Node;
        head = NULL;
    }
    bool isEmpty()
    {
        return head == NULL;
    }
    void tambahDepan(int databaru)
    {
        Node *baru;
        baru = new Node;
        baru->data = databaru;
        baru->next = NULL;

        if (isEmpty())
        {
            head = baru;
        }
        else
        {
            baru->next = head;
            head = baru;
        }
    }
		
    void cetak()
    {
        if (isEmpty())
        {
            cout << "List kosong";
        }
        else
        {
            Node *bantu;
            bantu = head;
            while (bantu->next != NULL)
            {
                cout << bantu->data << endl;
                bantu = bantu->next;
            }
        }
    }
};

void MyList::tambahBelakang(int databaru) {
    Node* baru;
    baru = new Node;
    baru->data = databaru;
    baru->next = NULL;

    if (isEmpty()) {
        head = baru;
    } else {
        Node* bantu = head;
        while (bantu->next != NULL) {
            bantu = bantu->next;
        }
        bantu->next = baru;
    }
}

void MyList::hapusDepan() {
    if (isEmpty()) {
        cout << "List kosong" << endl;
    } else {
        Node* temp = head;
        head = head->next;
        delete temp;
    }
}

int main(){
  MyList ML;
  ML.tambahDepan(5);
  ML.tambahDepan(20);
  ML.tambahDepan(10);
  ML.tambahBelakang(27);
  ML.cetak();
  return 0;
}
